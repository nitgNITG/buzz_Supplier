rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /User/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /Supplier/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /Products/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /User/{parent}/Cart/{document} {
      allow create: if request.auth.uid == parent;
      allow read: if request.auth.uid == parent;
      allow write: if request.auth.uid == parent;
      allow delete: if request.auth.uid == parent;
    }

    match /order/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /User/{parent}/Address/{document} {
      allow create: if request.auth.uid == parent;
      allow read: if request.auth.uid == parent;
      allow write: if request.auth.uid == parent;
      allow delete: if request.auth.uid == parent;
    }

    match /SubscriptionPackage/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /User/{parent}/SupplierRating/{document} {
      allow create: if request.auth.uid == parent;
      allow read: if request.auth.uid == parent;
      allow write: if request.auth.uid == parent;
      allow delete: if request.auth.uid == parent;
    }

    match /Products/{parent}/ProductRating/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /{path=**}/ProductRating/{document} {
      allow read: if true;
    }


    match /Articales/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /FAQ/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /ContantUs/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /ImageGallery/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /Notification/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /AppData/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if true;
      allow delete: if true;
    }

    match /User/{parent}/Branches/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if true;
      allow delete: if true;
    }

    match /{path=**}/Branches/{document} {
      allow read: if true;
    }


    match /User/{parent}/BrancheTest/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if true;
      allow delete: if true;
    }

    match /{path=**}/BrancheTest/{document} {
      allow read: if true;
    }


    match /Translator/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if true;
      allow delete: if true;
    }

    match /User/{parent}/Search/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if true;
      allow delete: if true;
    }

    match /{path=**}/Search/{document} {
      allow read: if true;
    }


    match /User/{parent}/History/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if true;
      allow delete: if true;
    }

    match /{path=**}/History/{document} {
      allow read: if true;
    }


    match /ff_user_push_notifications/{id} {
      allow read, update, delete: if false;
      allow create: if /databases/$(database)/documents/User/$(request.auth.uid) == request.resource.data.sender;
    }
  }
}
